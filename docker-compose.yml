services:
  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      - gateway
    networks:
      - app-network
    restart: unless-stopped
      
  # API Gateway
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: gateway
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"
    environment:
      - SERVER_PORT=${GATEWAY_PORT}
      - PRODUCT_SERVICE_URL=${PRODUCT_SERVICE_URL}
      - USER_SERVICE_URL=${USER_SERVICE_URL}
      - ORDER_SERVICE_URL=${ORDER_SERVICE_URL}
      - CORS_ALLOWED_ORIGIN=${CORS_ALLOWED_ORIGIN}
      - AUTH_SERVER_URL=${AUTH_SERVER_URL}
    depends_on:
      - micro-inventario
      - micro-usuarios
      - micro-pedidos
      - micro-auth-server
    networks:
      - app-network
    restart: unless-stopped

  # Microservicio de autenticaci√≥n
  micro-auth-server:  
    build:
      context: ./micro-auth-server
      dockerfile: Dockerfile
    container_name: micro-auth-server
    ports:
      - "${AUTH_SERVER_PORT}:${AUTH_SERVER_PORT}"
    environment:
      - SERVER_PORT=${AUTH_SERVER_PORT}
      - FRONTEND_URL=${FRONTEND_URL}
      - GATEWAY_URL=${GATEWAY_URL}
      - USER_SERVICE_URL=${USER_SERVICE_URL}
    networks:
      - app-network
    restart: unless-stopped    
  
  # Microservicio Inventario
  micro-inventario:
    build:
      context: ./micro-inventario
      dockerfile: Dockerfile
    container_name: micro-inventario
    ports:
      - "${INVENTARIO_PORT}:${INVENTARIO_PORT}"
    environment:
      - SERVER_PORT=${INVENTARIO_PORT}
      - MONGODB_URI=mongodb://mongodb_ecommerce:27017/${MONGODB_DATABASE}
    depends_on:
      - mongodb_ecommerce
    networks:
      - app-network
    restart: unless-stopped

  # Microservicio Usuarios
  micro-usuarios:
    build:
      context: ./micro-usuarios
      dockerfile: Dockerfile
    container_name: micro-usuarios
    ports:
      - "${USUARIOS_PORT}:${USUARIOS_PORT}"
    environment:
      - SERVER_PORT=${USUARIOS_PORT}
      - MONGODB_URI=mongodb://mongodb_ecommerce:27017/${MONGODB_DATABASE}
    depends_on:
      - mongodb_ecommerce
    networks:
      - app-network
    restart: unless-stopped

  # Microservicio Pedidos
  micro-pedidos:
    build:
      context: ./micro-pedidos
      dockerfile: Dockerfile
    container_name: micro-pedidos
    ports:
      - "${PEDIDOS_PORT}:${PEDIDOS_PORT}"
    environment:
      - SERVER_PORT=${PEDIDOS_PORT}
      - MONGODB_URI=mongodb://mongodb_ecommerce:27017/${MONGODB_DATABASE}
      - PRODUCT_SERVICE_URL=http://micro-inventario:${INVENTARIO_PORT}
      - USER_SERVICE_URL=http://micro-usuarios:${USUARIOS_PORT}
    depends_on:
      - mongodb_ecommerce
    networks:
      - app-network
    restart: unless-stopped

  # Base de datos MongoDB (compartida por los tres microservicios)
  mongodb_ecommerce:
    image: mongo:latest
    container_name: mongodb_ecommerce
    ports:
      - "27017:27017"
    volumes:
      - mongodb_ecommerce-data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=${MONGODB_DATABASE}
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_ecommerce-data:
    driver: local
